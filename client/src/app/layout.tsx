// "use client";

// import { useState, useEffect } from "react";
// import './globals.css';
// import { useKindeBrowserClient } from "@kinde-oss/kinde-auth-nextjs";
// import Navbar from "@/components/navbar"; // Use absolute path with `@`

// export default function RootLayout({ children }: { children: React.ReactNode }) {
//   // Using Kinde's browser client hook to get the authentication status
//   const { isAuthenticated } = useKindeBrowserClient();
//   const [authStatus, setAuthStatus] = useState(false);

//   // Set the auth status once the component has mounted
//   useEffect(() => {
//     setAuthStatus(isAuthenticated);
//   }, [isAuthenticated]);

//   return (
//     <html lang="en">
//       <body>
//         {/* Pass the `authStatus` to Navbar */}
//         {/* <Navbar isAuthenticated={authStatus} /> */}
//         <main>{children}</main>
//       </body>
//     </html>
//   );
// }




import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ConvexClientProvider } from "./ConvexClientProvider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ConvexClientProvider>{children}</ConvexClientProvider>
      </body>
    </html>
  );
}
